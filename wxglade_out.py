#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Fri Apr 10 22:29:47 2020
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((492, 320))
        
        # Tool Bar
        self.frame_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.frame_toolbar)
        self.frame_toolbar.AddTool(1000, _(u"Открыть видео"), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\open.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\open.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Открыть видео"), "")
        self.frame_toolbar.AddTool(1001, _(u"Сохранить видео"), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\save.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\save.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Сохранить видео"), "")
        self.frame_toolbar.AddSeparator()
        self.frame_toolbar.AddTool(1010, _(u"Отменить"), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\undo.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\undo.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Отменить"), "")
        self.frame_toolbar.AddTool(1011, _(u"Повторить"), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\repeat.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\repeat.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Повторить"), "")
        self.frame_toolbar.AddSeparator()
        self.frame_toolbar.AddTool(1020, _(u"Новый эффект"), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\effect.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("D:\\Work\\Project.VideoFilter\\ui.design\\icons\\effect.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Новый эффект"), "")
        # Tool Bar end

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.click_open, id=1000)
        self.Bind(wx.EVT_TOOL, self.click_save, id=1001)
        self.Bind(wx.EVT_TOOL, self.click_undo, id=1010)
        self.Bind(wx.EVT_TOOL, self.click_repeat, id=1011)
        self.Bind(wx.EVT_TOOL, self.click_addeffect, id=1020)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle(_("frame"))
        self.frame_toolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        self.Layout()
        # end wxGlade

    def click_open(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_open' not implemented!")
        event.Skip()

    def click_save(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_save' not implemented!")
        event.Skip()

    def click_undo(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_undo' not implemented!")
        event.Skip()

    def click_repeat(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_repeat' not implemented!")
        event.Skip()

    def click_addeffect(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_addeffect' not implemented!")
        event.Skip()

# end of class MainFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MainFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = MyApp(0)
    app.MainLoop()
