#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Mon Apr 13 21:06:16 2020
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((576, 432))
        
        # Tool Bar
        self.toolbar = wx.ToolBar(self, -1, style=wx.TB_DEFAULT_STYLE | wx.TB_HORZ_TEXT)
        self.SetToolBar(self.toolbar)
        self.toolbar.AddTool(wx.ID_OPEN, _(u"Открыть"), wx.Bitmap("icons\\open.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("icons\\open.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Открыть видео..."), "")
        self.toolbar.AddTool(wx.ID_SAVEAS, _(u"Сохранить как"), wx.Bitmap("icons\\save.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("icons\\save.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Сохранить видео как..."), "")
        self.toolbar.AddSeparator()
        self.toolbar.AddTool(wx.ID_UNDO, _(u"Отменить"), wx.Bitmap("icons\\undo.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("icons\\undo.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Отменить"), "")
        self.toolbar.AddTool(wx.ID_REDO, _(u"Повторить"), wx.Bitmap("icons\\redo.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("icons\\redo.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Повторить"), "")
        self.toolbar.AddSeparator()
        self.toolbar.AddTool(wx.ID_ADD, _(u"Новый эффект"), wx.Bitmap("icons\\effect.png", wx.BITMAP_TYPE_ANY), wx.Bitmap("icons\\effect.disabled.png", wx.BITMAP_TYPE_ANY), wx.ITEM_NORMAL, _(u"Новый эффект"), "")
        # Tool Bar end
        self.video_frame = wx.Panel(self, wx.ID_ANY)
        self.panel = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_STATIC)
        self.play_button = wx.BitmapButton(self.panel, wx.ID_ANY, wx.Bitmap("icons\\play.png", wx.BITMAP_TYPE_ANY))
        self.repeat_button = wx.BitmapButton(self.panel, wx.ID_ANY, wx.Bitmap("D:\\Work\\Project.VideoFilter\\icons\\repeat.png", wx.BITMAP_TYPE_ANY))
        self.slider_1 = wx.Slider(self.panel, wx.ID_ANY, 0, 0, 10)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.click_open, id=wx.ID_OPEN)
        self.Bind(wx.EVT_TOOL, self.click_save, id=wx.ID_SAVEAS)
        self.Bind(wx.EVT_TOOL, self.click_undo, id=wx.ID_UNDO)
        self.Bind(wx.EVT_TOOL, self.click_repeat, id=wx.ID_REDO)
        self.Bind(wx.EVT_TOOL, self.click_addeffect, id=wx.ID_ADD)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle(_("PyVideo"))
        self.toolbar.SetToolSeparation(0)
        self.toolbar.Realize()
        self.play_button.SetBitmapDisabled(wx.Bitmap("icons\\play.disabled.png", wx.BITMAP_TYPE_ANY))
        self.play_button.SetSize(self.play_button.GetBestSize())
        self.repeat_button.SetSize(self.repeat_button.GetBestSize())
        self.panel.SetMinSize((-1, 32))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        static_line_1 = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
        sizer_1.Add(static_line_1, 0, 0, 0)
        sizer_1.Add(self.video_frame, 1, wx.EXPAND, 0)
        sizer_2.Add(self.play_button, 0, 0, 0)
        sizer_2.Add(self.repeat_button, 0, 0, 0)
        sizer_2.Add(self.slider_1, 1, wx.EXPAND, 0)
        self.panel.SetSizer(sizer_2)
        sizer_1.Add(self.panel, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def click_open(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_open' not implemented!")
        event.Skip()

    def click_save(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_save' not implemented!")
        event.Skip()

    def click_undo(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_undo' not implemented!")
        event.Skip()

    def click_repeat(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_repeat' not implemented!")
        event.Skip()

    def click_addeffect(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'click_addeffect' not implemented!")
        event.Skip()

# end of class MainFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MainFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = MyApp(0)
    app.MainLoop()
